#fgraphs <- left_join(fgraphs,mlbmap)
#fgraphsp <- filter(fgraphsp,str_length(MLB)>0)
noidmatchfgpros <- anti_join(fgraphsp,mymaster,by=c('playerid'))
small <- select(fgraphs,playerid,MLB)
mymaster <- left_join(mymaster,small,by=c('playerid'))
mymaster <- mutate(mymaster,MLB=ifelse(is.na(MLB.y),MLB.x,MLB.y)) %>% select(-MLB.x,-MLB.y)
noidmatch <- rbind(noidmatchfg,noidmatchfgpros)
#noidmatch <- noidmatchfg
sameName <- inner_join(noidmatch,mymaster,by=c('Player','MLB'))
repl <- select(sameName,playerid = playerid.y,newid = playerid.x)
# remove rows if newid is an 'sa' number
#repl <- filter(repl,str_starts(newid,'sa'))
mymaster <- left_join(mymaster,repl)
mymaster <- mutate(mymaster,playerid = ifelse(is.na(newid),playerid,newid)) %>% select(-newid)
#noidmatch2 <- anti_join(noidmatch,mymaster,by=c('playerid'))
# sameName2 <- inner_join(noidmatch,mymaster,by=c('Player'))
#
# repl2 <- select(sameName2,playerid = playerid.y,newid = playerid.x,MLB = MLB.y, newMLB = MLB.x)
# mymaster <- left_join(mymaster,repl2)
# mymaster <- mutate(mymaster,playerid = ifelse(is.na(newid),playerid,newid)) %>% select(-newid)
# mymaster <- mutate(mymaster,MLB = ifelse(is.na(newMLB),MLB,newMLB)) %>% select(-newMLB)
noidmatch <- anti_join(noidmatch,mymaster,by=c('playerid'))
noidmatch <- noidmatch %>% mutate(birth_year=NA,cbs_name=Player,Pos='')
addthem <- noidmatch %>% select(playerid,Player,birth_year,cbs_name,Pos,MLB)
mymaster <- bind_rows(mymaster,addthem)
cbsH <- read.cbs2('../AllHitters.csv')
cbsH <- select(cbsH,Player,Pos,MLB)
cbsP <- read.cbs2('../AllPitchers01.csv')
cbsP <- select(cbsP,Player,Pos,MLB)
cbs <- bind_rows(cbsH,cbsP)
my <- mutate(mymaster,Player=cbs_name)
nonamecbs <- anti_join(cbs,my,by=c('Player'))
# Need to create new rows - need playerid, Player, birth_date, cbs_name, Pos, MLB
nonamecbs <- nonamecbs %>% mutate(playerid=str_c("cbs",Player,MLB),birth_year=NA,cbs_name=Player)
nonamecbs <- select(nonamecbs,playerid,Player,birth_year,cbs_name,Pos,MLB)
mymaster <- bind_rows(mymaster,nonamecbs)
#mymaster <- unique(mymaster)
mymaster <- mymaster %>% distinct(playerid, .keep_all = TRUE)
mymaster <- mymaster %>% distinct(Player, MLB, .keep_all = TRUE)
mymaster <- mymaster %>% filter(playerid != "")
# master <- read.csv("../master.csv",stringsAsFactors=FALSE, encoding="UTF-8")
# master <- dplyr::rename(master,playerid=fg_id,Pos = mlb_pos,MLB=mlb_team,Player=mlb_name)
# master <- mutate(master, birth_year = year(as.Date(birth_date, format="%m/%d/%Y")))
# master$playerid <- ifelse(str_length(master$playerid)==0,master$mlb_id,master$playerid)
# mymaster <- select(master,playerid,Player,birth_year,cbs_name,Pos,MLB)
write.csv(mymaster,"../mymaster.csv")
print(str_c("New ids from fangraphs = ",nrow(noidmatchfg)))
print(str_c("Prospects: Combine rows (player+mlb) = ",nrow(noidmatchfgpros)))
#print(str_c("Change MLB team (player only) = ",nrow(repl2)))
print(str_c("New players added from fangraphs = ",nrow(addthem)))
print(str_c("New players added from CBS = ",nrow(nonamecbs)))
#mymaster <- mymaster %>% rowwise() %>%
#  mutate(birth_year=ifelse(is.na(birth_year),getAge(playerid),birth_year))
ct <- 1
noby <- filter(mymaster,is.na(birth_year),!str_starts(playerid,"cbs"),!str_starts(playerid,"my"))
nrow(noby)
while ((ct < 80) & (nrow(noby) > 0)) {
ct <- ct + 1
noby <- filter(mymaster,is.na(birth_year),!str_starts(playerid,"cbs"),!str_starts(playerid,"my"))
print(nrow(noby))
ssize <- ifelse(nrow(noby)>10,10,nrow(noby))
noby <- noby %>% slice_sample(n=ssize)
noby <- noby %>% rowwise() %>%
mutate(birth_year=ifelse(is.na(birth_year),getAge(playerid),birth_year)) %>% select(playerid,nby=birth_year)
m2 <- left_join(mymaster,noby)
m2 <- mutate(m2,birth_year=ifelse(!is.na(birth_year),birth_year,nby))
mymaster <- select(m2,-nby)
write.csv(mymaster,"../mymaster.csv")
}
#noby <- noby %>% slice_sample(n=100)
# noby <- noby %>% rowwise() %>%
#   mutate(birth_year=ifelse(is.na(birth_year),getAge(playerid),birth_year)) %>% select(playerid,nby=birth_year)
#
# m2 <- left_join(mymaster,noby)
# m2 <- mutate(m2,birth_year=ifelse(!is.na(birth_year),birth_year,nby))
# mymaster <- select(m2,-nby)
# write.csv(mymaster,"../mymaster.csv")
# #mymaster <- mymaster %>% rowwise() %>%
# #  mutate(birth_year=ifelse(is.na(birth_year),getAge(playerid),birth_year))
# ct <- 1
# noby <- filter(mymaster,is.na(Pos),!str_starts(playerid,"cbs"),!str_starts(playerid,"my"))
#
# while ((ct < 10) & (nrow(noby) > 0)) {
#   ct <- ct + 1
#   noby <- filter(mymaster,is.na(Pos),!str_starts(playerid,"cbs"),!str_starts(playerid,"my"))
#   print(nrow(noby))
#   noby <- noby %>% slice_sample(n=10)
#   noby <- noby %>% rowwise() %>%
#     mutate(Pos=ifelse(is.na(Pos),getPos(playerid),Pos)) %>% select(playerid,npos=Pos)
#
#   m2 <- left_join(mymaster,noby)
#   m2 <- mutate(m2,Pos=ifelse(!is.na(Pos),Pos,npos))
#   mymaster <- select(m2,-npos)
#write.csv(mymaster,"../mymaster.csv")
#}
# m2 <- mymaster %>% select(Player,MLB)
# dupes <- m2[duplicated(m2),]
# print(dupes)
# cbs2 <- rename(cbs,cbsPos = Pos)
# my <- mutate(mymaster,Player=cbs_name)
#
# forPos <- left_join(cbs2,my,by=c('Player','MLB'))
# forPos <- select(forPos,playerid,cbsPos)
#
# m2 <- left_join(mymaster,forPos)
# m2 <- mutate(m2,Pos=ifelse(!is.na(cbsPos),cbsPos,Pos))
# mymaster <- select(m2,-cbsPos)
# byear <- '1990'
# page <- read_html(str_c("https://www.baseball-reference.com/leagues/MLB/",byear,"-births.shtml")) %>%
#   html_nodes("table")
# df <- page[[1]] %>% html_table(,header=TRUE,fill=TRUE)
# pl <- select(df,Player=Name,MLB=Tms) %>% separate_rows(MLB) %>% mutate(BRbirth_year=byear)
#
# m2 <- left_join(mymaster,pl,by=c('Player','MLB'))
# m2 <- mutate(m2,birth_year=ifelse(!is.na(birth_year),birth_year,BRbirth_year))
# mymaster <- select(m2,-BRbirth_year)
#
# noby <- filter(mymaster,is.na(birth_year))
# nrow(noby)
# people <- People %>% select(playerID,birthYear,nameGiven)
# pitching <- Pitching %>% select(playerID,yearID,teamID) %>% filter(yearID >= 2018)
# batting <- Batting %>% select(playerID,yearID,teamID) %>% filter(yearID >= 2018)
# team <- Teams %>% select(teamID,teamIDBR) %>% unique()
#
# yp <- bind_rows(pitching,batting)
# lpl <- left_join(yp,people) %>% left_join(team) %>%
#   select(Player=nameGiven,MLB=teamIDBR,birthYear)
#
# m2 <- inner_join(mymaster,lpl,by=c('Player'))
# m2 <- mutate(m2,birth_year=ifelse(!is.na(birth_year),birth_year,birthYear))
#mymaster <- select(m2,-nby)
# board <- read.csv('../fangraphs-the-board-data.csv',stringsAsFactors=FALSE, encoding="UTF-8")
# board <- select(board,playerid=playerId,Age) %>% mutate(nby = 2021 - Age) %>% select(-Age)
#
# noby <- filter(mymaster,is.na(birth_year))
# nrow(noby)
#
# m2 <- left_join(mymaster,board)
# m2 <- mutate(m2,birth_year=ifelse(!is.na(birth_year),birth_year,nby))
# mymaster <- select(m2,-nby)
#
#
# noby <- filter(mymaster,is.na(birth_year))
# nrow(noby)
#official file
#rosters <- read.csv(str_c("../",year,"Rosters1.csv"), encoding="UTF-8")
#miss <- anti_join(rosters,master,by=c('playerid'))
#miss2 <- miss %>% mutate(birth_year=NA,cbs_name=Player) %>%
#  select(playerid,Player,birth_year,cbs_name,Pos,MLB)
#mymaster <- bind_rows(mymaster,miss2)
# htrend <- read.csv("../code/hTrend.csv")
# h2 <- distinct(htrend)
# h2 <- mutate(h2,date=parse_date_time(date, orders = c('mdy', 'ymd')))
# #write.csv(h2,"../code/hTrend.csv",row.names = FALSE)
# pedf <- read.cbs('../poselig.csv')
#pedf <- dplyr::rename(pedf,posEl=Eligible) %>% select(playerid,posEl)
#pedf <- mutate(pedf,nPos=firstPos(posEl))
#pedf <- select(pedf,-posEl)
#m2 <- left_join(mymaster,pedf)
#m2 <- mutate(m2,Pos=ifelse(!is.na(Pos),Pos,nPos))
#mymaster <- select(m2,-nPos)
#write.csv(mymaster,"../mymaster.csv")
# posfile <- read.csv("../FanGraphs Leaderboard.csv",stringsAsFactors=FALSE)
# posfile <- mutate(posfile,playerid = as.character(playerid))
# posfile <- posfile %>% rename(Player=Name,nPos=Pos) %>% select(playerid,nPos)
#
# tdf <- left_join(mymaster,posfile)
#
# ntdf <- tdf %>% filter(is.na(Pos),!is.na(nPos))
#mpos <- mymaster %>% filter(str_detect(Pos,"/"))
#mpos <- mpos %>% mutate(Pos=firstPosSlash(Pos)) %>% mutate(Pos=str_replace(Pos,"/",""))
# mpos2 <- mymaster %>% mutate(Pos=ifelse(str_detect(Pos,"/"),firstPosSlash(Pos),Pos)) %>% mutate(Pos=str_replace(Pos,"/",""))
#write.csv(mpos2,"../mymaster.csv")
# Add in position eligibility based on 20 games
# #pedf <- read.cbs(positionElig)
# pedf <- read.cbs(str_c("../",cyear,"PosElig.csv"))
# pedf <- dplyr::rename(pedf,posEl=Eligible) %>% select(playerid,posEl)
# pedf$npos <- str_split_i(pedf$posEl, ",", 1)
# # Add column into AllH
# tdf <- left_join(mymaster,pedf)
# tdf <- tdf %>% mutate(nnpos=if_else(is.na(npos),Pos,npos))
# tdf <- tdf %>% select(-Pos,-posEl,-npos) %>% rename(Pos=nnpos)
# write.csv(tdf,"../mymaster.csv")
# page <- read_xml(str_c("https://www.fangraphs.com/players/nolan-jones/sa3002951/stats"),as_html=TRUE)
# phtml <- page %>% html_text2()
# #bdate <- str_extract(phtml,"Birth")
# #write_xml(page,"../fangraphs.xml")
# pstring <- as.character(page)
# #bdate <- str_extract(pstring,"<tr class=.player-info__bio-birthdate.>.{1,20}")
# bdate <- str_extract(pstring,"<td>([0-9]{1,2}\\/[0-9]{1,2}\\/[0-9]{4})",group=1) %>% mdy() %>% year()
#
# fgid <- "sa3002951"
#print(getAge(fgid))
runApp('C:/Users/cmcne/Dropbox/Personal/DAFL/LeagueEval')
runApp('C:/Users/cmcne/Dropbox/Personal/DAFL/LeagueEval')
runApp('C:/Users/cmcne/Dropbox/Personal/DAFL/LeagueEval')
library(tidyr)
library(dplyr)
library(stringr)
library("lubridate")
library(rvest)
library("jsonlite")
library(xml2)
#library(Lahman)
source('./daflFunctions.r')
year <- '2025'
getAge <- function(playerid) {
print(playerid)
Sys.sleep(60)
byear <- NA
tryCatch(
{
#page <- read_html(str_c("https://www.fangraphs.com/players/nolan-jones/",playerid,"/stats"))
#byear <- page %>% html_node(".player-info__bio-birthdate td") %>% html_text() %>%
#str_extract("[0-9/]{8,}") %>% mdy() %>% year()
#page <- read_xml(str_c("https://www.fangraphs.com/players/nolan-jones/sa3018608/stats"),as_html=TRUE)
page <- read_xml(str_c("https://www.fangraphs.com/players/nolan-jones/",playerid,"/stats"),as_html=TRUE)
phtml <- page %>% html_text2()
pstring <- as.character(page)
byear <- str_extract(pstring,":.([0-9]{1,2}\\/[0-9]{1,2}\\/[0-9]{4})",group=1) %>% mdy() %>% year()
},
error=function(error_message) {
print("some error")
}
)
print(byear)
byear
}
getPos <- function(playerid) {
print(playerid)
Sys.sleep(60)
pos <- NA
tryCatch(
{
page <- read_html(str_c("https://www.fangraphs.com/players/nolan-jones/",playerid,"/stats"))
pos <- page %>% html_node(".player-info-box-pos") %>% html_text()
#str_extract("[0-9/]{8,}") %>% mdy() %>% year()
print(pos)
},
error=function(error_message) {
print("some error")
}
)
pos
}
read.cbs2 <- function(fn) {
df <- read.csv(fn,skip=1,stringsAsFactors=FALSE, encoding="UTF-8")
df <- mutate(df, Pos = pullPos(Player))
df <- mutate(df, MLB = pullMLB(Player))
df$Player <- unlist(lapply(df$Player,stripName))
# Team abbreviations are not the same - find all discrepancies WAS->WSH
df$MLB <- replace(df$MLB,df$MLB=='WAS','WSN')
df$MLB <- replace(df$MLB,df$MLB=='CWS','CHW')
df$MLB <- replace(df$MLB,df$MLB=='TB','TBR')
df$MLB <- replace(df$MLB,df$MLB=='KC','KCR')
df$MLB <- replace(df$MLB,df$MLB=='SD','SDP')
df$MLB <- replace(df$MLB,df$MLB=='SF','SFG')
# Create Team column
#df <- mutate(df,Avail=str_replace(Avail,'\\.\\.\\.',''))
#df <- left_join(df,nicks,by=c('Avail'))
df$Team <- df$Avail
#df$Team <- str_replace(df$Team,'W','Free Agent')
df$Team <- ifelse(str_detect(df$Team,'W '),'Free Agent',df$Team)
df <- select(df,-Avail)
#addPlayerid(df)
}
mymaster <- read.csv("../mymaster.csv",stringsAsFactors=FALSE) %>% select(-X)
#cleanup any blank cbs_name
mymaster <- mutate(mymaster,cbs_name = ifelse(cbs_name=='',Player,cbs_name))
#fgh <- read.csv(str_c('../atcH',as.character(year),'.csv',sep=''),stringsAsFactors=FALSE, encoding="UTF-8")
#fgh <- read.fg('../steamerH2023.csv')
fgh <- read_json('../steamerH2025.json',simplifyVector = TRUE)
if ("playerid" %in% colnames(fgh)) {
} else {
if ("playerids" %in% colnames(fgh)) {
fgh <- fgh %>% rename(playerid=playerids)
} else {
fgh <- fgh %>% mutate(playerid = str_match(Name,"s?a?[0-9]+"))
}
}
fgh <- select(fgh,playerid,Player=PlayerName,MLB=Team)
#fgh <- select(fgh,playerid,Player,MLB=Team)
fgp <- read_json('../steamerP2025.json',simplifyVector = TRUE)
if ("playerid" %in% colnames(fgp)) {
} else {
if ("playerids" %in% colnames(fgp)) {
fgp <- fgp %>% rename(playerid=playerids)
} else {
fgp <- fgp %>% mutate(playerid = str_match(Name,"s?a?[0-9]+"))
}
}
fgp <- select(fgp,playerid,Player=PlayerName,MLB=Team)
fgraphs <- bind_rows(fgh,fgp)
# This is for ATC files
#mlbmap <- read.csv("../data/MLBmap.csv",stringsAsFactors = FALSE)
#fgraphs <- left_join(fgraphs,mlbmap)
fgraphs <- filter(fgraphs,str_length(MLB)>0)
noidmatchfg <- anti_join(fgraphs,mymaster,by=c('playerid'))
#fgh <- read.csv(str_c('../atcH',as.character(year),'.csv',sep=''),stringsAsFactors=FALSE, encoding="UTF-8")
#fgh <- read.fg('../steamerH2023.csv')
hplist <- read.csv("../fangraphs-the-board-dataH.csv",stringsAsFactors=FALSE)
fgh <- hplist %>% rename(playerid = PlayerId)
#fgh <- hplist
fgh <- select(fgh,playerid,Player=Name,MLB=Org)
pplist <- read.csv("../fangraphs-the-board-dataP.csv",stringsAsFactors=FALSE)
fgp <- pplist %>% rename(playerid = PlayerId)
#fgp <- pplist
fgp <- select(fgp,playerid,Player=Name,MLB=Org)
#fgh <- getFGScouts("../fangraphs-the-board-dataH.json")
#fgh <- select(fgh,playerid,Player,MLB=Team)
#fgp <- getFGScouts("../fangraphs-the-board-dataP.json")
#fgp <- select(fgp,playerid,Player,MLB=Team)
fgraphsp <- bind_rows(fgh,fgp)
# This is for ATC files
#mlbmap <- read.csv("../data/MLBmap.csv",stringsAsFactors = FALSE)
#fgraphs <- left_join(fgraphs,mlbmap)
#fgraphsp <- filter(fgraphsp,str_length(MLB)>0)
noidmatchfgpros <- anti_join(fgraphsp,mymaster,by=c('playerid'))
small <- select(fgraphs,playerid,MLB)
mymaster <- left_join(mymaster,small,by=c('playerid'))
mymaster <- mutate(mymaster,MLB=ifelse(is.na(MLB.y),MLB.x,MLB.y)) %>% select(-MLB.x,-MLB.y)
noidmatch <- rbind(noidmatchfg,noidmatchfgpros)
#noidmatch <- noidmatchfg
sameName <- inner_join(noidmatch,mymaster,by=c('Player','MLB'))
repl <- select(sameName,playerid = playerid.y,newid = playerid.x)
# remove rows if newid is an 'sa' number
#repl <- filter(repl,str_starts(newid,'sa'))
mymaster <- left_join(mymaster,repl)
mymaster <- mutate(mymaster,playerid = ifelse(is.na(newid),playerid,newid)) %>% select(-newid)
#noidmatch2 <- anti_join(noidmatch,mymaster,by=c('playerid'))
# sameName2 <- inner_join(noidmatch,mymaster,by=c('Player'))
#
# repl2 <- select(sameName2,playerid = playerid.y,newid = playerid.x,MLB = MLB.y, newMLB = MLB.x)
# mymaster <- left_join(mymaster,repl2)
# mymaster <- mutate(mymaster,playerid = ifelse(is.na(newid),playerid,newid)) %>% select(-newid)
# mymaster <- mutate(mymaster,MLB = ifelse(is.na(newMLB),MLB,newMLB)) %>% select(-newMLB)
noidmatch <- anti_join(noidmatch,mymaster,by=c('playerid'))
noidmatch <- noidmatch %>% mutate(birth_year=NA,cbs_name=Player,Pos='')
addthem <- noidmatch %>% select(playerid,Player,birth_year,cbs_name,Pos,MLB)
mymaster <- bind_rows(mymaster,addthem)
cbsH <- read.cbs2('../AllHitters.csv')
cbsH <- select(cbsH,Player,Pos,MLB)
cbsP <- read.cbs2('../AllPitchers01.csv')
cbsP <- select(cbsP,Player,Pos,MLB)
cbs <- bind_rows(cbsH,cbsP)
my <- mutate(mymaster,Player=cbs_name)
nonamecbs <- anti_join(cbs,my,by=c('Player'))
# Need to create new rows - need playerid, Player, birth_date, cbs_name, Pos, MLB
nonamecbs <- nonamecbs %>% mutate(playerid=str_c("cbs",Player,MLB),birth_year=NA,cbs_name=Player)
nonamecbs <- select(nonamecbs,playerid,Player,birth_year,cbs_name,Pos,MLB)
mymaster <- bind_rows(mymaster,nonamecbs)
#mymaster <- unique(mymaster)
mymaster <- mymaster %>% distinct(playerid, .keep_all = TRUE)
mymaster <- mymaster %>% distinct(Player, MLB, .keep_all = TRUE)
mymaster <- mymaster %>% filter(playerid != "")
# master <- read.csv("../master.csv",stringsAsFactors=FALSE, encoding="UTF-8")
# master <- dplyr::rename(master,playerid=fg_id,Pos = mlb_pos,MLB=mlb_team,Player=mlb_name)
# master <- mutate(master, birth_year = year(as.Date(birth_date, format="%m/%d/%Y")))
# master$playerid <- ifelse(str_length(master$playerid)==0,master$mlb_id,master$playerid)
# mymaster <- select(master,playerid,Player,birth_year,cbs_name,Pos,MLB)
write.csv(mymaster,"../mymaster.csv")
print(str_c("New ids from fangraphs = ",nrow(noidmatchfg)))
print(str_c("Prospects: Combine rows (player+mlb) = ",nrow(noidmatchfgpros)))
#print(str_c("Change MLB team (player only) = ",nrow(repl2)))
print(str_c("New players added from fangraphs = ",nrow(addthem)))
print(str_c("New players added from CBS = ",nrow(nonamecbs)))
#mymaster <- mymaster %>% rowwise() %>%
#  mutate(birth_year=ifelse(is.na(birth_year),getAge(playerid),birth_year))
ct <- 1
noby <- filter(mymaster,is.na(birth_year),!str_starts(playerid,"cbs"),!str_starts(playerid,"my"))
nrow(noby)
while ((ct < 80) & (nrow(noby) > 0)) {
ct <- ct + 1
noby <- filter(mymaster,is.na(birth_year),!str_starts(playerid,"cbs"),!str_starts(playerid,"my"))
print(nrow(noby))
ssize <- ifelse(nrow(noby)>10,10,nrow(noby))
noby <- noby %>% slice_sample(n=ssize)
noby <- noby %>% rowwise() %>%
mutate(birth_year=ifelse(is.na(birth_year),getAge(playerid),birth_year)) %>% select(playerid,nby=birth_year)
m2 <- left_join(mymaster,noby)
m2 <- mutate(m2,birth_year=ifelse(!is.na(birth_year),birth_year,nby))
mymaster <- select(m2,-nby)
write.csv(mymaster,"../mymaster.csv")
}
#noby <- noby %>% slice_sample(n=100)
# noby <- noby %>% rowwise() %>%
#   mutate(birth_year=ifelse(is.na(birth_year),getAge(playerid),birth_year)) %>% select(playerid,nby=birth_year)
#
# m2 <- left_join(mymaster,noby)
# m2 <- mutate(m2,birth_year=ifelse(!is.na(birth_year),birth_year,nby))
# mymaster <- select(m2,-nby)
# write.csv(mymaster,"../mymaster.csv")
# #mymaster <- mymaster %>% rowwise() %>%
# #  mutate(birth_year=ifelse(is.na(birth_year),getAge(playerid),birth_year))
# ct <- 1
# noby <- filter(mymaster,is.na(Pos),!str_starts(playerid,"cbs"),!str_starts(playerid,"my"))
#
# while ((ct < 10) & (nrow(noby) > 0)) {
#   ct <- ct + 1
#   noby <- filter(mymaster,is.na(Pos),!str_starts(playerid,"cbs"),!str_starts(playerid,"my"))
#   print(nrow(noby))
#   noby <- noby %>% slice_sample(n=10)
#   noby <- noby %>% rowwise() %>%
#     mutate(Pos=ifelse(is.na(Pos),getPos(playerid),Pos)) %>% select(playerid,npos=Pos)
#
#   m2 <- left_join(mymaster,noby)
#   m2 <- mutate(m2,Pos=ifelse(!is.na(Pos),Pos,npos))
#   mymaster <- select(m2,-npos)
#write.csv(mymaster,"../mymaster.csv")
#}
# m2 <- mymaster %>% select(Player,MLB)
# dupes <- m2[duplicated(m2),]
# print(dupes)
# cbs2 <- rename(cbs,cbsPos = Pos)
# my <- mutate(mymaster,Player=cbs_name)
#
# forPos <- left_join(cbs2,my,by=c('Player','MLB'))
# forPos <- select(forPos,playerid,cbsPos)
#
# m2 <- left_join(mymaster,forPos)
# m2 <- mutate(m2,Pos=ifelse(!is.na(cbsPos),cbsPos,Pos))
# mymaster <- select(m2,-cbsPos)
# byear <- '1990'
# page <- read_html(str_c("https://www.baseball-reference.com/leagues/MLB/",byear,"-births.shtml")) %>%
#   html_nodes("table")
# df <- page[[1]] %>% html_table(,header=TRUE,fill=TRUE)
# pl <- select(df,Player=Name,MLB=Tms) %>% separate_rows(MLB) %>% mutate(BRbirth_year=byear)
#
# m2 <- left_join(mymaster,pl,by=c('Player','MLB'))
# m2 <- mutate(m2,birth_year=ifelse(!is.na(birth_year),birth_year,BRbirth_year))
# mymaster <- select(m2,-BRbirth_year)
#
# noby <- filter(mymaster,is.na(birth_year))
# nrow(noby)
# people <- People %>% select(playerID,birthYear,nameGiven)
# pitching <- Pitching %>% select(playerID,yearID,teamID) %>% filter(yearID >= 2018)
# batting <- Batting %>% select(playerID,yearID,teamID) %>% filter(yearID >= 2018)
# team <- Teams %>% select(teamID,teamIDBR) %>% unique()
#
# yp <- bind_rows(pitching,batting)
# lpl <- left_join(yp,people) %>% left_join(team) %>%
#   select(Player=nameGiven,MLB=teamIDBR,birthYear)
#
# m2 <- inner_join(mymaster,lpl,by=c('Player'))
# m2 <- mutate(m2,birth_year=ifelse(!is.na(birth_year),birth_year,birthYear))
#mymaster <- select(m2,-nby)
# board <- read.csv('../fangraphs-the-board-data.csv',stringsAsFactors=FALSE, encoding="UTF-8")
# board <- select(board,playerid=playerId,Age) %>% mutate(nby = 2021 - Age) %>% select(-Age)
#
# noby <- filter(mymaster,is.na(birth_year))
# nrow(noby)
#
# m2 <- left_join(mymaster,board)
# m2 <- mutate(m2,birth_year=ifelse(!is.na(birth_year),birth_year,nby))
# mymaster <- select(m2,-nby)
#
#
# noby <- filter(mymaster,is.na(birth_year))
# nrow(noby)
#official file
#rosters <- read.csv(str_c("../",year,"Rosters1.csv"), encoding="UTF-8")
#miss <- anti_join(rosters,master,by=c('playerid'))
#miss2 <- miss %>% mutate(birth_year=NA,cbs_name=Player) %>%
#  select(playerid,Player,birth_year,cbs_name,Pos,MLB)
#mymaster <- bind_rows(mymaster,miss2)
# htrend <- read.csv("../code/hTrend.csv")
# h2 <- distinct(htrend)
# h2 <- mutate(h2,date=parse_date_time(date, orders = c('mdy', 'ymd')))
# #write.csv(h2,"../code/hTrend.csv",row.names = FALSE)
# pedf <- read.cbs('../poselig.csv')
#pedf <- dplyr::rename(pedf,posEl=Eligible) %>% select(playerid,posEl)
#pedf <- mutate(pedf,nPos=firstPos(posEl))
#pedf <- select(pedf,-posEl)
#m2 <- left_join(mymaster,pedf)
#m2 <- mutate(m2,Pos=ifelse(!is.na(Pos),Pos,nPos))
#mymaster <- select(m2,-nPos)
#write.csv(mymaster,"../mymaster.csv")
# posfile <- read.csv("../FanGraphs Leaderboard.csv",stringsAsFactors=FALSE)
# posfile <- mutate(posfile,playerid = as.character(playerid))
# posfile <- posfile %>% rename(Player=Name,nPos=Pos) %>% select(playerid,nPos)
#
# tdf <- left_join(mymaster,posfile)
#
# ntdf <- tdf %>% filter(is.na(Pos),!is.na(nPos))
#mpos <- mymaster %>% filter(str_detect(Pos,"/"))
#mpos <- mpos %>% mutate(Pos=firstPosSlash(Pos)) %>% mutate(Pos=str_replace(Pos,"/",""))
# mpos2 <- mymaster %>% mutate(Pos=ifelse(str_detect(Pos,"/"),firstPosSlash(Pos),Pos)) %>% mutate(Pos=str_replace(Pos,"/",""))
#write.csv(mpos2,"../mymaster.csv")
# Add in position eligibility based on 20 games
# #pedf <- read.cbs(positionElig)
# pedf <- read.cbs(str_c("../",cyear,"PosElig.csv"))
# pedf <- dplyr::rename(pedf,posEl=Eligible) %>% select(playerid,posEl)
# pedf$npos <- str_split_i(pedf$posEl, ",", 1)
# # Add column into AllH
# tdf <- left_join(mymaster,pedf)
# tdf <- tdf %>% mutate(nnpos=if_else(is.na(npos),Pos,npos))
# tdf <- tdf %>% select(-Pos,-posEl,-npos) %>% rename(Pos=nnpos)
# write.csv(tdf,"../mymaster.csv")
# page <- read_xml(str_c("https://www.fangraphs.com/players/nolan-jones/sa3002951/stats"),as_html=TRUE)
# phtml <- page %>% html_text2()
# #bdate <- str_extract(phtml,"Birth")
# #write_xml(page,"../fangraphs.xml")
# pstring <- as.character(page)
# #bdate <- str_extract(pstring,"<tr class=.player-info__bio-birthdate.>.{1,20}")
# bdate <- str_extract(pstring,"<td>([0-9]{1,2}\\/[0-9]{1,2}\\/[0-9]{4})",group=1) %>% mdy() %>% year()
#
# fgid <- "sa3002951"
#print(getAge(fgid))
runApp('C:/Users/cmcne/Dropbox/Personal/DAFL/LeagueEval')
runApp('C:/Users/cmcne/Dropbox/Personal/DAFL/LeagueEval')
runApp('C:/Users/cmcne/Dropbox/Personal/DAFL/LeagueEval')
runApp('C:/Users/cmcne/Dropbox/Personal/DAFL/LeagueEval')
